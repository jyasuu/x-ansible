services:
  traefik:
    image: "traefik:v3.1.2"
    container_name: "traefik"
    ports:
      - "80:80"
      - "8080:8080"
      - "8082:8082"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik.toml:/traefik.toml:ro"
      - "./dynamic.toml:/dynamic.toml:ro"
      - "./dynamic.yaml:/dynamic.yaml:ro"
  whoami:
    image: "traefik/whoami"
    container_name: "simple-service"
  # whoami2:
  #   image: "traefik/whoami"
  #   container_name: "simple-service2"
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.whoami2.rule=Path(`/`)"
  #     - "traefik.http.routers.whoami2.entrypoints=web"
  app:
    image: 'jyasu/dotnet-vue-spa'
    environment:
      - 'ASPNETCORE_ENVIRONMENT=Production'
    volumes:
      - ./DotnetVueSPA/App_Data:/app/App_Data:z
      - ./appsettings.json:/app/appsettings.json:ro
      - ./appsettings.json:/app/appsettings.Development.json:ro
      - ./appsettings.json:/app/appsettings.Production.json:ro
    user: "0:0"
    depends_on:
      - postgresql-master
    links: 
        - postgresql-master
  app4:
    image: 'jyasu/dotnet-vue-spa'
    environment:
      - 'ASPNETCORE_ENVIRONMENT=Production'
    volumes:
      - ./DotnetVueSPA/App_Data:/app/App_Data:z
      - ./appsettings.json:/app/appsettings.json:ro
      - ./appsettings.json:/app/appsettings.Development.json:ro
      - ./appsettings.json:/app/appsettings.Production.json:ro
    user: "0:0"
    depends_on:
      - postgresql-master
    links: 
        - postgresql-master
  app1:
    image: 'jyasu/dotnet-vue-spa'
    environment:
      - 'ASPNETCORE_ENVIRONMENT=Production'
    volumes:
      - ./DotnetVueSPA/App_Data:/app/App_Data:z
      - ./appsettings.json:/app/appsettings.json:ro
      - ./appsettings.json:/app/appsettings.Development.json:ro
      - ./appsettings.json:/app/appsettings.Production.json:ro
    user: "0:0"
    depends_on:
      - postgresql-master
    links: 
        - postgresql-master
  app2:
    image: 'jyasu/dotnet-vue-spa'
    environment:
      - 'ASPNETCORE_ENVIRONMENT=Production'
    volumes:
      - ./DotnetVueSPA/App_Data:/app/App_Data:z
      - ./appsettings.json:/app/appsettings.json:ro
      - ./appsettings.json:/app/appsettings.Development.json:ro
      - ./appsettings.json:/app/appsettings.Production.json:ro
    user: "0:0"
    depends_on:
      - postgresql-master
    links: 
        - postgresql-master
  postgresql-master:
    image: 'bitnami/postgresql:latest'
    ports:
      - 5433:5432
    volumes:
      - 'postgresql_master_data:/bitnami/postgresql'
    environment:
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_USERNAME=demo_user
      - POSTGRESQL_PASSWORD=demo_password
      - POSTGRESQL_DATABASE=dotnet_demo
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_SYNCHRONOUS_COMMIT_MODE=on
      - POSTGRESQL_NUM_SYNCHRONOUS_REPLICAS=1
  postgresql-slave:
    image: 'bitnami/postgresql:latest'
    depends_on:
      - postgresql-master
    environment:
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_MASTER_HOST=postgresql-master
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
      - POSTGRESQL_USERNAME=demo_user
      - POSTGRESQL_PASSWORD=demo_password
      - ALLOW_EMPTY_PASSWORD=yes
  postgresql-slave2:
    image: 'bitnami/postgresql:latest'
    depends_on:
      - postgresql-master
    environment:
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_MASTER_HOST=postgresql-master
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
      - POSTGRESQL_USERNAME=demo_user
      - POSTGRESQL_PASSWORD=demo_password
      - ALLOW_EMPTY_PASSWORD=yes


volumes:
  postgresql_master_data: